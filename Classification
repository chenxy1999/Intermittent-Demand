flag=seq(0,0,length.out=dim(x)[1])
for (i in 1:dim(x)[1]){
  alpha=0.2;demand=as.vector(na.omit(t(as.vector(x[i,]))));
  
  mu=mean(demand);
  k=kurtosis(demand);
  s=sd(demand)
 if ((mu<2*s) & (k>3)){
  
   demand[which(demand<=(2*s))]=0;
   z=mean(demand[which(demand!=0)])
   if (length(which(demand!=0))>1){
     p=mean((1-alpha)^diff(which(demand!=0)))
     if ((z*p)<(2*s)) {
          flag[i]=1
     }
   } else{flag[i]=1}
 }
}

%%This program can be used to differentiate between intermittent demand and smooth demand patterns
